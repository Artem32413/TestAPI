version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - app-network

  migrate:
    image: migrate/migrate:v4.16.2
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../migrations:/migrations
    command: 
      -path=/migrations 
      -database=postgres://postgres:postgres@db:5432/postgres?sslmode=disable
      up
    networks:
      - app-network

  app:
    build:
      context: ..
      dockerfile: build/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: "postgres://postgres:postgres@db:5432/postgres?sslmode=disable"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge